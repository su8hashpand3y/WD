// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WD.Models;

namespace WD.Migrations
{
    [DbContext(typeof(WDContext))]
    [Migration("20180416090325_intial")]
    partial class intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WD.Models.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Text");

                    b.Property<DateTime>("Time");

                    b.Property<byte[]>("TinyImage");

                    b.Property<string>("User");

                    b.Property<long>("UserId");

                    b.HasKey("ID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("WD.Models.Image", b =>
                {
                    b.Property<long>("ImageID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Large");

                    b.Property<byte[]>("Medium");

                    b.Property<long>("PostId");

                    b.Property<byte[]>("Small");

                    b.Property<byte[]>("TinyImage");

                    b.HasKey("ImageID");

                    b.HasIndex("PostId")
                        .IsUnique();

                    b.ToTable("Images");
                });

            modelBuilder.Entity("WD.Models.Post", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<long>("Dislikes");

                    b.Property<long>("Likes");

                    b.Property<bool>("Reviewed");

                    b.Property<string>("Title");

                    b.Property<string>("TwitterPost");

                    b.Property<DateTime>("UploadDate");

                    b.Property<long>("UploadedBy");

                    b.HasKey("ID");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("WD.Models.Image", b =>
                {
                    b.HasOne("WD.Models.Post")
                        .WithOne("Image")
                        .HasForeignKey("WD.Models.Image", "PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
